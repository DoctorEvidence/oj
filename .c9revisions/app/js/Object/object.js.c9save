{"ts":1359253214655,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"(function() {\n\n    OJ.lift('hasLength', function (obj) {\n        'use strict';\n        var ret = (OJ.is.array(obj) || OJ.is.jQuery(obj));\n        return ret;\n    });\n\n    OJ.lift('contains', function (object, index) {\n        'use strict';\n        var ret = false;\n        if (false === OJ.is.nullOrUndefined(object)) {\n            if (OJ.is.array(object)) {\n                ret = object.indexOf(index) !== -1;\n            }\n            if (false === ret && object.hasOwnProperty(index)) {\n                ret = true;\n            }\n        }\n        return ret;\n    });\n\n    OJ.lift('renameProperty', function (obj, oldName, newName) {\n        'use strict';\n        if (false === OJ.is.nullOrUndefined(obj) && OJ.contains(obj, oldName)) {\n            obj[newName] = obj[oldName];\n            delete obj[oldName];\n        }\n        return obj;\n    });\n\n    OJ.lift('clone', function (data) {\n        'use strict';\n        return OJ.deserialize(OJ.serialize(data));\n    });\n\n    OJ.lift('serialize', function (data) {\n        'use strict';\n        var ret = '';\n        OJ.tryExec(function() { ret = JSON.stringify(data); });\n        return ret;\n    });\n\n\n    OJ.lift('deserialize', function (data) {\n        'use strict';\n        var ret = {};\n        OJ.tryExec(function () { ret = window.$.parseJSON(data); });\n        if(OJ.is.nullOrEmpty(ret)) {\n\t\t\tret = {};\n\t\t}\n\t\treturn ret;\n    });\n    \n    OJ.lift('params', function (data, delimiter) {\n         'use strict';\n        var ret = '';\n        delimiter = delimiter || '&';\n        if (delimiter === '&') {\n            OJ.tryExec(function() { ret = $.param(data); });\n        } else {\n            OJ.each(data, function(val, key) {\n                if(ret.length > 0) {\n                    ret += delimiter;\n                }\n                ret += key + '=' + val;\n            });\n        }\n        return OJ.string(ret);\n    });\n\n    \n    OJ.lift('extend', function (destObj, srcObj, deepCopy) {\n        'use strict';\n        var ret = destObj || {};\n        if(arguments.length === 3) {\n            ret = window.$.extend(OJ.bool(deepCopy), ret, srcObj);\n        } else {\n            ret = window.$.extend(ret, srcObj);\n        }\n        return ret;\n    });\n\n    OJ.lift('each', function(object, callBack) {\n         'use strict';\n         if(OJ.is.array(object) && object.length > 0) {\n            object.forEach(callBack);\n         } \n         else if(object && object.keys && object.keys.length > 0) {\n            object.keys.forEach(callBack);\n         }\n         return null;\n    });\n\t\t\n}());"]],"start1":0,"start2":0,"length1":0,"length2":2551}]],"length":2551}
