{"ts":1359249476279,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"(function() {\n\n\tOJ.makeSubNameSpace('to');\n\n\tOJ.to.lift('bool', function bool(str, nullIsTrue) {\n\t\tvar retBool = false;\n\t\tfunction toBool() {\n\t\t\tvar ret = (str === true),\n\t\t\t\ttruthy;\n\t\t\tif(!ret) {\n\t\t\t\tif (str === false) {\n\t\t\t\t\tret = false;\n\t\t\t\t} else {\n\t\t\t\t\tif(OJ.is.trueOrFalse(str)) {\n\t\t\t\t\t\ttruthy = OJ.string(str).toLowerCase().trim();\n\t\t\t\t\t\tif (truthy === 'true' || truthy === '1') {\n\t\t\t\t\t\t\tret = true;\n\t\t\t\t\t\t} else \n\t\t\t\t\t\t\tret = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (nullIsTrue && OJ.is.nullOrEmpty(str)) {\n\t\t\t\t\t\tret = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tret = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t}\n\t\tretBool = toBool();\n\n\t\treturn retBool;\n\t});\n\n\tOJ.to.lift('ES5_ToBool', function(val) {\n\t    return (val !== false &&\n            val !== 0 &&\n            val !== '' &&\n            val !== null &&\n            val !== undefined &&\n            (typeof val !== 'number' || !isNaN(val)));\n\t});\n    \n\tOJ.to.lift('dateFromTicks', function(tickStr) {\n\t\tvar ticsDateTime = OJ.string(tickStr);\n        var ret, ticks, offset, localOffset, arr;\n        \n        if (false === OJ.is.nullOrEmpty(ticsDateTime)) {\n            ticsDateTime = ticsDateTime.replace('/', '');\n            ticsDateTime = ticsDateTime.replace('Date', '');\n            ticsDateTime = ticsDateTime.replace('(', '');\n            ticsDateTime = ticsDateTime.replace(')', '');\n            arr = ticsDateTime.split('-');\n            if (arr.length > 1) {\n                ticks = OJ.number(arr[0]);\n                offset = OJ.number(arr[1]);\n                localOffset = new Date().getTimezoneOffset();\n                ret = new Date((ticks - ((localOffset + (offset / 100 * 60)) * 1000)));\n            } else if (arr.length === 1) {\n                ticks = OJ.number(arr[0]);\n                ret = new Date(ticks);\n            }\n        }\n        return ret;\n    });\n\n\tOJ.to.lift('number', function(inputNum, defaultNum) {\n        'use strict';\n        function tryGetNumber(val) {\n            var ret = NaN;\n\n            var getNumber = function(value) {\n                var num = NaN;\n                if (value) {\n                    num = +value;\n                }\n                if (isNaN(num)) {\n                    num = parseInt(value, 0);\n                }\n                return num;\n            };\n\n            var tryGet = getNumber(val);\n\n            if (!window.Number.isNaN(tryGet) && \n                window.Number.isFinite(tryGet) &&\n                window.Number.MAX_VALUE !== tryGet &&\n                window.Number.MIN_VALUE !== tryGet) {\n                ret = tryGet;\n            } \n            return ret;\n        }\n\n        var retVal = tryGetNumber(inputNum) || tryGetNumber(defaultNum);\n\n        return retVal;\n    });\n\n\tOJ.to.lift('string', function (inputStr, defaultStr) {\n            function tryGetString(str) {\n                var ret = '';\n                if (false === OJ.is.stringNullOrEmpty(str)) {\n                    ret = str.toString();\n                } \n                return ret;\n            }\n\n            var retObj = tryGetString(inputStr) || tryGetString(defaultStr);\n\n            return retObj;\n\n        });\n\n}());"]],"start1":0,"start2":0,"length1":0,"length2":3117}]],"length":3117}
{"contributors":[],"silentsave":true,"ts":1359249478509,"patch":[[{"diffs":[[1,"/*global OJ:true,$:true*/\n"],[0,"(functio"]],"start1":0,"start2":0,"length1":8,"length2":34}]],"length":3143,"saved":false}
{"ts":1359249511135,"patch":[[{"diffs":[[0,"\t} else "],[1,"{"],[0,"\n\t\t\t\t\t\t\t"]],"start1":438,"start2":438,"length1":16,"length2":17}]],"length":3144,"saved":false}
