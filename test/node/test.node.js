// Generated by CoffeeScript 1.7.1
(function() {
  (function(OJ) {
    module(OJ.name + 'nodes');
    test('Test the Div node', function() {
      var cNode, child, childId, dNode, node, nodeId;
      expect(7);
      node = OJ.nodes.div();
      node.text('Hi I\'m some text');
      deepEqual(node.tagName === 'div', true, 'Node is a DIV');
      nodeId = node.getId();
      dNode = document.getElementById(nodeId);
      ok(dNode, 'Node is in the DOM');
      deepEqual(nodeId, dNode.id, 'Element IDs are equal');
      child = node.div();
      childId = child.getId();
      deepEqual(child.tagName === 'div', true, 'Node is a DIV');
      cNode = document.getElementById(childId);
      deepEqual(cNode.id, childId, 'Element IDs are equal');
      node.remove();
      equal(undefined, document.getElementById(nodeId, 'Node has been removed'));
      equal(undefined, document.getElementById(childId, 'Child has been removed'));
    });
    test('Test the Span node', function() {
      var cNode, child, childId, dNode, node, nodeId;
      expect(7);
      node = OJ.nodes.span();
      node.text('Hi I\'m some text');
      deepEqual(node.tagName === 'span', true, 'Node is a span');
      nodeId = node.getId();
      dNode = document.getElementById(nodeId);
      ok(dNode, 'Node is in the DOM');
      deepEqual(nodeId, dNode.id, 'Element IDs are equal');
      child = node.span();
      childId = child.getId();
      deepEqual(child.tagName === 'span', true, 'Node is a span');
      cNode = document.getElementById(childId);
      deepEqual(cNode.id, childId, 'Element IDs are equal');
      node.remove();
      equal(undefined, document.getElementById(nodeId, 'Node has been removed'));
      equal(undefined, document.getElementById(childId, 'Child has been removed'));
    });
  })((typeof global !== 'undefined' && global ? global : (typeof window !== 'undefined' ? window : this)).OJ);

}).call(this);

//# sourceMappingURL=test.node.map
