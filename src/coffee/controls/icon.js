// Generated by CoffeeScript 1.7.1
(function() {
  (function() {
    var controlName, friendlyName;
    controlName = 'y-icon';
    friendlyName = 'icon';
    OJ.controls.members[friendlyName] = controlName;
    return OJ.controls.register(friendlyName, function(options, owner) {
      var className, classNameBase, defaults, isToggled, ret;
      defaults = {
        iconOpts: {
          name: '',
          stackedIcon: '',
          swapIcon: '',
          size: false,
          color: '',
          library: '',
          isFixedWidth: false,
          isList: false,
          isSpinner: false
        },
        props: {
          "class": ''
        },
        rootNodeType: 'span'
      };
      OJ.extend(defaults, options);
      ret = OJ.control(defaults, owner, controlName);
      isToggled = false;
      classNameBase = 'fa ';
      if (defaults.iconOpts.isFixedWidth) {
        classNameBase += 'fa-fw ';
      }
      if (defaults.iconOpts.isList) {
        classNameBase += 'fa-li ';
      }
      if (defaults.iconOpts.isSpinner) {
        classNameBase += 'fa-spin ';
      }
      if (defaults.iconOpts.size) {
        if (defaults.iconOpts.size > 1 && defaults.iconOpts.size <= 5) {
          classNameBase += 'fa-' + defaults.iconOpts.size + 'x ';
        }
      }
      className = classNameBase + 'fa-' + defaults.iconOpts.name;
      ret.myIcon = ret.make('i', {
        props: {
          "class": className
        }
      });
      ret.toggleIcon = function() {
        var newIcon;
        if (defaults.iconOpts.swapIcon) {
          newIcon = defaults.iconOpts.name;
          isToggled = !isToggled;
          if (isToggled) {
            ret.myIcon.$.removeClass('fa-' + newIcon);
            newIcon = defaults.iconOpts.swapIcon;
          } else {
            ret.myIcon.$.removeClass('fa-' + defaults.iconOpts.swapIcon);
          }
          return ret.myIcon.$.addClass('fa-' + newIcon);
        }
      };
      return ret;
    });
  })();

}).call(this);

//# sourceMappingURL=icon.js.map