// Generated by CoffeeScript 1.7.1
(function() {
  var __slice = [].slice;

  (function(OJ) {
    var assert, console, count, length, method, methods, noop, thisGlobal;
    method = void 0;
    noop = _.noop;
    methods = ["assert", "clear", "count", "debug", "dir", "dirxml", "error", "exception", "group", "groupCollapsed", "groupEnd", "info", "log", "markTimeline", "profile", "profileEnd", "table", "time", "timeEnd", "timeStamp", "trace", "warn"];
    length = methods.length;
    thisGlobal = (typeof global !== 'undefined' && global ? global : typeof window !== 'undefined' ? window : this);
    console = (thisGlobal.console = thisGlobal.console || {});
    while (length--) {
      method = methods[length];
      if (!console[method]) {
        console[method] = noop;
      }
    }
    OJ.makeSubNameSpace("console");
    OJ.console.register("assert", assert = function() {
      var a;
      a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      'use strict';
      console.assert.apply(console, a);
    });
    OJ.console.register("count", count = function() {
      var a;
      a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      'use strict';
      console.count.apply(console, a);
    });
    OJ.console.register("error", function() {
      var a;
      a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      'use strict';
      console.error.apply(console, a);
    });
    OJ.console.register("group", function() {
      var a;
      a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      'use strict';
      console.group.apply(console, a);
    });
    OJ.console.register("groupCollapsed", function() {
      var a;
      a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      'use strict';
      console.groupCollapsed.apply(console, a);
    });
    OJ.console.register("groupEnd", function() {
      var a;
      a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      'use strict';
      console.groupEnd.apply(console, a);
    });
    OJ.console.register("info", function() {
      var a;
      a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      'use strict';
      console.info.apply(console, a);
    });
    OJ.console.register("log", function() {
      var a;
      a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      'use strict';
      console.log.apply(console, a);
    });
    OJ.console.register("profile", function() {
      var a;
      a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      'use strict';
      console.profile.apply(console, a);
    });
    OJ.console.register("profileEnd", function() {
      var a;
      a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      'use strict';
      console.profileEnd.apply(console, a);
    });
    OJ.console.register("table", function() {
      var a;
      a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      'use strict';
      console.table.apply(console, a);
    });
    OJ.console.register("time", function() {
      var a;
      a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      'use strict';
      console.time.apply(console, a);
    });
    OJ.console.register("timeEnd", function() {
      var a;
      a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      'use strict';
      console.timeEnd.apply(console, a);
    });
    OJ.console.register("trace", function() {
      var a;
      a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      'use strict';
      console.trace.apply(console, a);
    });
    OJ.console.register("warn", function() {
      var a;
      a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      'use strict';
      console.warn.apply(console, a);
    });
  })((typeof global !== 'undefined' && global ? global : typeof window !== 'undefined' ? window : this).OJ);

}).call(this);

//# sourceMappingURL=console.js.map