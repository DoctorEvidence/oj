// Generated by CoffeeScript 1.7.1
(function() {
  (function(OJ) {
    var eventInfo, eventName;
    if (OJ.global.addEventListener) {
      eventName = 'addEventListener';
      eventInfo = '';
    } else {
      eventName = 'attachEvent';
      eventInfo = 'on';
    }
    OJ.history.register('pushState', function(pageName, event) {
      if (pageName) {
        history.pushState(null, null, '#' + pageName);
        if (event) {
          if (event.preventDefault) {
            event.preventDefault();
          } else {
            event.returnValue = false;
          }
        }
      }
      return false;
    });
    OJ.history.register('restoreState', function(location) {
      var pageName;
      pageName = location.hash;
      if (!pageName) {
        pageName = location.href.split('#')[1];
      }
      if (pageName) {
        pageName = pageName.replace('#', '');
        OJ.publish('restoreState', {
          pageName: pageName,
          location: location
        });
      }
    });

    /* 
    hang on the event, all references in this document
     */
    OJ.document[eventName](eventInfo + 'click', (function(event) {
      var target;
      event = event || window.event;
      target = event.target || event.srcElement;
      if (target && target.nodeName === 'A' && (' ' + target.className + ' ').indexOf('ajax') >= 0) {
        OJ.pushState(target.href, event);
      }
      event.preventDefault();
      return event.stopPropagation();
    }), false);

    /*
    hang on popstate event triggered by pressing back/forward in browser
     */
    OJ.global[eventName](eventInfo + 'popstate', (function(event) {

      /*
      Note, this is the only difference when using this library,
      because the object document.location cannot be overriden,
      so library the returns generated 'location' object within
      an object window.history, so get it out of 'history.location'.
      For browsers supporting 'history.pushState' get generated
      object 'location' with the usual 'document.location'.
       */
      var returnLocation;
      returnLocation = history.location || document.location;

      /*
      here can cause data loading, etc.
       */
      OJ.history.restoreState(returnLocation);
    }), false);
  })((typeof global !== 'undefined' && global ? global : (typeof window !== 'undefined' ? window : this)).OJ);

}).call(this);

//# sourceMappingURL=history.map
