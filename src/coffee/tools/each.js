// Generated by CoffeeScript 1.7.1
(function() {
  (function(OJ) {
    var canEach, each;
    canEach = function(obj) {
      return OJ.is.plainObject(obj) || OJ.is.array(obj);
    };
    each = function(obj, onEach, recursive) {
      if (canEach(obj)) {

        /*
         * `onEach` callback will receive 2 parameters: 
         * `val` and `key`. 
         * `val` is always the value of the property. 
         * `key` is either the name of the property or the current index of the array.
         */
        _.forOwn(obj, function(val, key) {
          var quit;
          if (onEach && (val || key)) {
            quit = onEach(val, key);
            if (false === quit) {
              return false;
            }
          }
          if (true === recursive) {
            each(val, onEach, true);
          }
        });
      }
    };
    OJ.register('each', each);
  })((typeof global !== 'undefined' && global ? global : (typeof window !== 'undefined' ? window : this)).OJ);

}).call(this);

//# sourceMappingURL=each.js.map