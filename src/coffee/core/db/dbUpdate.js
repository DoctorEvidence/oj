// Generated by CoffeeScript 1.7.1
(function() {
  (function() {
    'use strict';
    var onError, update, updateImpl;
    onError = function(eventObj) {
      OJ.debug.error(eventObj.target.error);
      return new Error(eventObj.target.error);
    };
    updateImpl = function(dbManager, tableName, indexName, indexVal, ret, record) {
      var deferred, doUpdate;
      deferred = Q.defer();
      doUpdate = function() {
        var e, index, keyRange, objectStore, selRequest, transaction;
        try {
          transaction = dbManager.getDb().transaction([tableName], "readwrite");
          objectStore = transaction.objectStore(tableName);
          index = objectStore.index(indexName);
          ret = ret || [];
          keyRange = IDBKeyRange.only(indexVal);
          selRequest = index.openCursor(keyRange);
          selRequest.onsuccess = function(event) {
            var cursor, newRec, updtRequest, val;
            cursor = event.target.result;
            if (cursor) {
              val = cursor.value;
              newRec = OJ.extend(val, record);
              updtRequest = cursor.update(newRec);
              updtRequest.onerror = onError;
            } else {
              deferred.resolve(ret);
            }
          };
          selRequest.onerror = function(e) {
            deferred.reject(onError(e));
          };
        } catch (_error) {
          e = _error;
          console.log(e, e.stack);
          deferred.reject(new Error("Could not select records", e));
        }
        return deferred.promise;
      };
      dbManager.promises.connect.then(doUpdate, function() {
        deferred.reject();
      });
      return deferred.promise;
    };
    OJ.db.register("update", update = function(dbWrapper, tableName, indexName, indexVal, record) {
      var ret;
      ret = [];
      return updateImpl(dbWrapper, tableName, indexName, indexVal, ret, record);
    });
  })();

}).call(this);

//# sourceMappingURL=dbUpdate.js.map