// Generated by CoffeeScript 1.7.1
(function() {
  (function(OJ) {
    var joins;
    joins = function(select) {
      var ret;
      ret = new OJ.actions.querybuilder.SqlDragDropTableJoinStore({
        storeId: "JoinStore"
      });
      ret.handleSQLJoinChanges = function(joinStore, join) {
        select.updateSQLOutput();
      };
      ret.on("add", ret.handleSQLJoinChanges, select);
      ret.on("remove", ret.handleSQLJoinChanges, select);
      ret.updateJoinTableData = function(table) {
        var i, joinCondition, l, leftTable, rightTable, tableId;
        joins = void 0;
        tableId = void 0;
        tableId = table.get("id");
        joins = ret.getJoinsByTableId(tableId);
        i = 0;
        rightTable = void 0;
        leftTable = void 0;
        joinCondition = "";
        l = joins.length;
        while (i < l) {
          leftTable = select.tables.getTableById(joins[i].get("leftTableId"));
          rightTable = select.tables.getTableById(joins[i].get("rightTableId"));
          if (leftTable.get("tableAlias") !== "") {
            joinCondition = joinCondition + leftTable.get("tableAlias") + "." + joins[i].get("leftTableField") + "=";
          } else {
            joinCondition = joinCondition + leftTable.get("tableName") + "." + joins[i].get("leftTableField") + "=";
          }
          if (rightTable.get("tableAlias") !== "") {
            joinCondition = joinCondition + rightTable.get("tableAlias") + "." + joins[i].get("rightTableField");
          } else {
            joinCondition = joinCondition + rightTable.get("tableName") + "." + joins[i].get("rightTableField");
          }
          joins[i].beginEdit();
          joins[i].set("joinCondition", joinCondition);
          joins[i].commit(true);
          joins[i].endEdit();
          i++;
        }
      };
      ret.getJoinsByTableId = function(tableId) {
        var aReturn;
        aReturn = [];
        select.joins.each(function(join) {
          if (join.get("leftTableId") === tableId || join.get("rightTableId") === tableId) {
            aReturn.push(join);
          }
        });
        return aReturn;
      };
      ret.removeJoinById = function(joinID) {
        var join;
        join = void 0;
        join = select.joins.getById(joinID);
        ret.remove(join);
        return ret;
      };
      ret.addJoin = function(join) {
        ret.add(join);
        return ret;
      };
      return ret;
    };
    OJ.actions.sql.register("joins", joins);
  })((typeof global !== "undefined" && global ? global : (typeof window !== "undefined" ? window : this)).OJ);

}).call(this);

//# sourceMappingURL=joins.map
