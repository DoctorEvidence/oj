// Generated by CoffeeScript 1.7.1
(function() {
  var _storeIIFE;

  (_storeIIFE = function(OJ) {

    /*
    A Store is a collection of data that is to be rendered in a View or Panel.
    This private class can never be directly instanced.
    @param name {String} A name for the store class
    @param proxy {OJ.stores.proxy} A proxy for loading data into the store
    @param dataModel {OJ.dataModels.dataModel} The dataModel of the store
     */
    var Store, store;
    Store = function(name, proxy, dataModel) {
      "use strict";
      var that;
      that = OJ.classDefinition({
        name: name,
        extend: "Ext.data.Store",
        onDefine: function(classDef) {
          OJ.property(classDef, "autoSync", true);
          OJ.property(classDef, "proxy", proxy || OJ.stores.proxy("memory"));
          OJ.property(classDef, "model", dataModel);
          delete classDef.initComponent;
        }
      });
      return that;
    };
    OJ.instanceOf.register("Store", Store);

    /*
    Instance a new Store for consumption by an Ext view or panel
    @param storeDef.name {String} A name for the store class
    @param storeDef.proxy {OJ.stores.proxy} A proxy for loading data into the store
    @param storeDef.dataModel {OJ.dataModels.dataModel} The dataModel of the store
    @returns {OJ.stores.store} A OJ store
     */
    OJ.stores.register("store", store = function(storeDef) {
      "use strict";
      var ret;
      if (!storeDef) {
        throw new Error("Cannot create a Store without options.");
      }
      if (!(storeDef.proxy instanceof OJ.instanceOf.Proxy)) {
        storeDef.proxy = OJ.stores.proxy("memory");
      }
      if (!storeDef.dataModel) {
        throw new Error("Cannot create a Store without a DataModel.");
      }
      ret = new Store(storeDef.name, storeDef.proxy, storeDef.dataModel);
      return ret.init();
    });
  })((typeof global !== "undefined" && global ? global : (typeof window !== "undefined" ? window : this)).OJ);

}).call(this);

//# sourceMappingURL=store.map
