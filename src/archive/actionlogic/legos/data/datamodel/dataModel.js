// Generated by CoffeeScript 1.7.1
(function() {
  var _modelIIFE;

  (_modelIIFE = function(OJ) {

    /*
    Define the properties which are available to DataModel.
     */
    var DataModel, dataModelProperties;
    dataModelProperties = OJ.object();
    dataModelProperties.fields = "fields";
    OJ.constant(OJ.dataModels, "properties", dataModelProperties);

    /*
    Private class representing the construction of a dataModel. It returns a OJ.dataModels.dataModel instance with collections for adding columns and subscribers.
    @internal
    @constructor
    @param name {String} The ClassName of the dataModel to associate with ExtJS
    @param extend {String} [extend='Ext.model.Model'] An ExtJs class name to extend, usually the Model model
    @param .dataTypeCollection {OJ.dataTypes.collection} [fields=new Array()] An array of fields to load with the dataModel. Fields can be a OJ.dataTypes.collection or an array (e.g. ['name', 'string', 'Bob'])
     */
    DataModel = function(name, extend, dataTypeCollection) {
      var extFieldsCollection, that;
      extFieldsCollection = OJ.dataTypes.collection();
      that = OJ.classDefinition({
        name: name,
        extend: extend || "Ext.data.Model",
        onDefine: function(classDef) {
          var _makeOJField;
          if (dataTypeCollection && dataTypeCollection.length > 0) {
            OJ.each(dataTypeCollection, _makeOJField = function(dataType) {
              var OJDataType;
              if (dataType instanceof OJ.instanceOf.DataType) {
                extFieldsCollection.add(dataType);
              } else {
                if (dataType && dataType[0]) {
                  OJDataType = OJ.dataTypes.type(dataType[0], dataType[1], dataType[2]);
                  extFieldsCollection.add(OJDataType);
                }
              }
            });
          }
          classDef.fields = extFieldsCollection.value;
          delete classDef.initComponent;
        }
      });
      return that;
    };
    OJ.instanceOf.register("DataModel", DataModel);

    /*
    Create a dataModel object.
    @param modelDef.name {String} The ClassName of the dataModel to associate with ExtJS
    @param modelDef.extend {String} [extend='Ext.model.Model'] An ExtJs class name to extend, usually the Model model
    @param modelDef.dataTypeCollection {OJ.dataTypes.collection} [fields=new Array()] An array of fields to load with the dataModel. Fields can be a OJ.dataTypes.collection or an array (e.g. ['name', 'string', 'Bob'])
    @returns {OJ.dataModels.dataModel} A dataModel object. Exposese subscribers and columns collections. Self-initializes.
     */
    OJ.dataModels.register("dataModel", function(modelDef) {
      var dataModel;
      if (!modelDef) {
        throw new Error("Cannot instance a dataModel without properties");
      }
      if (!modelDef.name) {
        throw new Error("Cannot instance a dataModel without a classname");
      }
      dataModel = new DataModel(modelDef.name, modelDef.extend, modelDef.dataTypeCollection);
      return dataModel.init();
    });
  })((typeof global !== "undefined" && global ? global : (typeof window !== "undefined" ? window : this)).OJ);

}).call(this);

//# sourceMappingURL=dataModel.map
