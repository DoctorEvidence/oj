// Generated by CoffeeScript 1.7.1
(function() {
  var _actionColumnIIFE;

  (_actionColumnIIFE = function(OJ) {

    /*
    Internal action column class
    @param text {String} Name of the column
     */
    var ActionColumn, actionColumn;
    ActionColumn = function(text) {
      "use strict";
      var that;
      that = OJ.grids.columns.column({
        xtype: OJ.grids.constants.xtypes.actioncolumn,
        width: 60,
        text: text
      });
      OJ.property(that, "items", []);
      OJ.property(that, "addItem", (function(columnItem) {
        if (!(columnItem instanceof OJ.instanceOf.ColumnItem)) {
          throw new Error("Invalid column item specified for collection.");
        }
        that.items.push(columnItem);
        return that;
      }), false, false, false);
      return that;
    };
    OJ.instanceOf.register("ActionColumn", ActionColumn);

    /*
    Create an action column
    @param sortable {Boolean} [sortable=true] Is Column Sortable
    @param text {String} Column Name
    @param menuDisabled {Boolean} [menuDisabled=false] Is Menu Disabled
     */
    OJ.grids.columns.register("actionColumn", actionColumn = function(sortable, text, menuDisabled) {
      "use strict";
      var ret;
      if (arguments_.length === 0) {
        throw new Error("Cannot create a column without parameters");
      }
      ret = new ActionColumn(text);
      ret.menuDisabled = menuDisabled;
      ret.sortable = sortable;
      return ret;
    });
  })((typeof global !== "undefined" && global ? global : (typeof window !== "undefined" ? window : this)).OJ);

}).call(this);

//# sourceMappingURL=actionColumn.map
