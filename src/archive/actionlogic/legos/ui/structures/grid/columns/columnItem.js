// Generated by CoffeeScript 1.7.1
(function() {
  var _columnItemIIFE;

  (_columnItemIIFE = function(OJ) {

    /*
    Private column item class constructor
    @param icon {String} Relative path to icon file
    @param tooltip {String} Tooltip to display on hover
    @param onGetClass {Function} [onGetClass] Method to call when getClass is called
    @param onHandler {Function} Method to fire in response to action column click
     */
    var ColumnItem, columnItem;
    ColumnItem = function(icon, tooltip, onGetClass, onHandler) {
      "use strict";
      var getClass, handler, that;
      that = this;
      OJ.property(that, "icon", icon);
      OJ.property(that, "tooltip", tooltip);

      /*
      Get the CSS class for the supplied values
       */
      OJ.property(that, "getClass", getClass = function(value, metadata, record) {
        var index, ret, store;
        store = void 0;
        index = void 0;
        ret = "x-grid-center-icon";
        store = record.store;
        index = store.indexOf(record);
        if (onGetClass && onGetClass(index, store)) {
          ret = "x-action-icon-disabled";
        }
        return ret;
      });

      /*
      Generic handler
       */
      OJ.property(that, "handler", handler = function(grid, rowIndex, colIndex) {
        var args;
        if (onHandler) {
          args = OJ.getArguments(arguments_);
          onHandler.apply(this, args);
        }
      });
      return that;
    };
    OJ.instanceOf.register("ColumnItem", ColumnItem);

    /*
    Create a column item, usually for inclusion in an ActionColumn
    @param icon {String} Relative path to icon file
    @param tooltip {String} Tooltip to display on hover
    @param onGetClass {Function} [onGetClass] Method to call when getClass is called
    @param onHandler {Function} Method to fire in response to action column click
     */
    OJ.grids.columns.register("columnItem", columnItem = function(icon, tooltip, onGetClass, onHandler) {
      "use strict";
      var ret;
      if (arguments_.length === 0 || !onHandler) {
        throw new Error("Cannot create a column item without parameters");
      }
      icon = icon || "";
      tooltip = tooltip || "";
      onGetClass = onGetClass || function() {};
      ret = new ColumnItem(icon, tooltip, onGetClass, onHandler);
      return ret;
    });
  })((typeof global !== "undefined" && global ? global : (typeof window !== "undefined" ? window : this)).OJ);

}).call(this);

//# sourceMappingURL=columnItem.map
