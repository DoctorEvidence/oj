// Generated by CoffeeScript 1.7.1
(function() {
  (function(OJ) {

    /*
    Create a new object with constant properties.
    @param props {Object} an object represent the enun members
     */
    var Constant;
    Constant = function(props) {
      var keys, that;
      that = null;
      keys = [];
      if (props) {
        that = this;

        /*
        Assert that the provided key is a member of the enum
        @param key {String} enum property name
         */
        OJ.property(that, "has", function(key) {
          return keys.indexOf(key) !== -1;
        });
        OJ.each(props, function(propVal, propName) {
          keys.push(propVal);
          Object.defineProperty(that, propName, {
            value: propVal
          });
        });
      }
      return that;
    };

    /*
    Create a new enum on the constants namespace.
    Enums are objects consisting of read-only, non-configurable, non-enumerable properties.
    @param name {String} the name of the enum
    @param props {Object} the properties of the enum
     */
    OJ.register("constant", function(OJ, name, props) {
      var ret;
      ret = new Constant(props);
      OJ = OJ || OJ;
      if (ret && OJ.constants && OJ.constants.register && name) {
        OJ.constants.register(name, ret);
        Object.seal(ret);
        Object.freeze(ret);
      }
      return ret;
    });
  })((typeof global !== "undefined" && global ? global : (typeof window !== "undefined" ? window : this)).OJ);

}).call(this);

//# sourceMappingURL=constant.map
