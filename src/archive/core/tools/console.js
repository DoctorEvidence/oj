// Generated by CoffeeScript 1.7.1
(function() {
  (function(OJ) {
    "use strict";
    var assert, console, count, initLoggly, length, method, methods, noop, prepareLoggly, thisGlobal;
    method = void 0;
    noop = function() {};
    methods = ["assert", "clear", "count", "debug", "dir", "dirxml", "error", "exception", "group", "groupCollapsed", "groupEnd", "info", "log", "markTimeline", "profile", "profileEnd", "table", "time", "timeEnd", "timeStamp", "trace", "warn"];
    thisGlobal = (typeof global !== "undefined" && global ? global : (typeof window !== "undefined" ? window : this));
    length = methods.length;
    console = (thisGlobal.console = thisGlobal.console || {});
    while (length--) {
      method = methods[length];
      if (!console[method]) {
        console[method] = noop;
      }
    }
    prepareLoggly = OJ.method(function(url) {
      ret.loggly = ret.loggly || {};
      ret.loggly.info = new thisGlobal.loggly({
        url: url,
        level: "log"
      });
      ret.loggly.perf = new thisGlobal.loggly({
        url: url,
        level: "debug"
      });
      ret.loggly.warn = new thisGlobal.loggly({
        url: url,
        level: "warn"
      });
      ret.loggly.error = new thisGlobal.loggly({
        url: url,
        level: "error"
      });
    });
    initLoggly = function(keepTrying) {
      var e, host, key, url;
      try {
        key = OJ.session.getLogglyInput();
        host = ("https:" === document.location.protocol ? "https://logs.loggly.com" : "http://logs.loggly.com");
        url = host + "/inputs/" + key + "?rt=1";
        if (loggly) {
          prepareLoggly(url);
        } else {
          thisGlobal.setTimeout((function() {
            initLoggly();
          }), 5000);
        }
      } catch (_error) {
        e = _error;
        if (keepTrying !== false) {
          thisGlobal.setTimeout((function() {
            initLoggly(false);
          }), 5000);
        }
      }
    };
    initLoggly();
    OJ.makeSubNameSpace("console");
    OJ.console.register("assert", assert = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
      "use strict";
      thisGlobal.console.assert(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    });
    OJ.console.register("count", count = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
      "use strict";
      thisGlobal.console.count(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    });
    OJ.console.register("error", function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
      "use strict";
      thisGlobal.console.error(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    });
    OJ.console.register("group", function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
      "use strict";
      thisGlobal.console.group(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    });
    OJ.console.register("groupCollapsed", function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
      "use strict";
      thisGlobal.console.groupCollapsed(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    });
    OJ.console.register("groupEnd", function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
      "use strict";
      thisGlobal.console.groupEnd(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    });
    OJ.console.register("info", function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
      "use strict";
      thisGlobal.console.info(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    });
    OJ.console.register("log", function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
      "use strict";
      thisGlobal.console.log(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    });
    OJ.console.register("profile", function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
      "use strict";
      thisGlobal.console.profile(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    });
    OJ.console.register("profileEnd", function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
      "use strict";
      thisGlobal.console.profileEnd(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    });
    OJ.console.register("table", function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
      "use strict";
      thisGlobal.console.table(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    });
    OJ.console.register("time", function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
      "use strict";
      thisGlobal.console.time(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    });
    OJ.console.register("timeEnd", function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
      "use strict";
      thisGlobal.console.timeEnd(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    });
    OJ.console.register("trace", function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
      "use strict";
      thisGlobal.console.trace(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    });
    OJ.console.register("warn", function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
      "use strict";
      thisGlobal.console.warn(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    });
  })((typeof global !== "undefined" && global ? global : (typeof thisGlobal !== "undefined" ? thisGlobal : this)).OJ);

}).call(this);

//# sourceMappingURL=console.map
